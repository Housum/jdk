CopyOnWriteArrayList解读

1.作为一个线程安全的ArrayList,适合那种查询多,修改少的场景,因为内部的实现是通过每次修改内部的元素
的适合都是通过copy一份新的数组实现(从名称可以看出来),因为实现的方式问题,所以读写可能会出现不一致的
问题,比如：在读的过程中插入了新的元素,那么读的可能是旧的数组.其他操作也会有同一个问题. 所以针对那种
强一致性的场景是不适合的

2.使用案例：
@see java.sql.DriverManager



